version: "3.9"

networks:
  django-app:
    driver: bridge

services:
  db:
    image: postgres:15.3-alpine
    environment:
      - POSTGRES_USER=django_food
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=django_food
    ports:
      - 5432:5432
    volumes:
      - ./src/docker/postgres/:/app/src/docker/postgres
    restart: unless-stopped
    networks:
      - django-app

  redis:
    image: redis:7-alpine
    ports:
      - 6378:6379
    networks:
      - django-app

  app:
    build:
      context: .
      dockerfile: Dockerfile
    links:
      - db:db
      - redis:redis
#    depends_on:
#      - db
#      - redis
    volumes:
      - ./src:/app/src
    command: bash -c "python src/manage.py runserver 0.0.0.0:8000"
    ports:
      - 8091:8000
    networks:
      - django-app
    env_file:
      - .env

#  flower:
#    image: mher/flower
#    environment:
#      - CELERY_BROKER_URL=redis://redis:6379/
#      - FLOWER_PORT=8888
#    ports:
#      - 5555:8888
#    depends_on:
#      - celery-worker

#  worker:
#    build: .
#    links:
#      - db:db
#      - redis:redis
#    command: bash -c "cd src/ && celery -A ecom.celery worker -l info --concurrency=4"
#    depends_on:
#      - db
#      - redis
#    volumes:
#      - ./src:/app/src
#    environment:
#      - DB_HOST=db
#      - DB_USER=ecom
#      - DB_PASS=12345
#      - DB_PORT=5432
#      - DB_NAME=ecom
#      - DEBUG=True
#      - SECRET_KEY=m7ai5_&crfg7+u8x^ocvd1ha=mf_jwo)+%!iwk#_(dfl_n6#&!
#      - REDIS_HOST=redis
